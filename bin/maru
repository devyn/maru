#!/usr/bin/env ruby

require 'yaml'
require 'maru/version'
require 'maru/operator'

cmd = ARGV.shift

operator = proc do
	begin
		config = YAML.load_file(ENV["MARU_CONFIG"] || "config.yaml")

		Maru::Operator.new(config)
	rescue
		abort "!! #$!"
	end
end

case cmd
when "start"
	operator = operator[]

	exit 1 unless operator.start_services(*ARGV)
when "stop"
	operator = operator[]

	exit 1 unless operator.stop_services(*ARGV)
when "restart"
	operator = operator[]

	exit 1 unless operator.restart_services(*ARGV)
when "logs"
	operator = operator[]

	exit 1 unless operator.stream_logs(*ARGV)
when "example"
	puts <<-EXAMPLE
## Optional: user and group to run under
#user: maru
#group: maru

# Where to put logs (default: log/)
log_dir: log/

# Where to put PID files (default: pid/)
pid_dir: pid/

## Optional: environment variables to launch child processes with
## if $FOO is anywhere in the string when setting variable `FOO`,
## it will be replaced with the current value of that variable.
#env:
#  PATH: /srv/maru/bin:$PATH # (example)

## Optional: plugins to pre-load
#plugins:
#- /path/to/my_plugin.rb

# Comment this section out if you don't want to launch a master.
# You must specify either host/port or socket.
master:
  ## Uncomment to bind via TCP
  #host: 0.0.0.0
  #port: 3202

  ## Uncomment to bind via UNIX domain socket
  #socket: /srv/maru/master.sock
 
  rackup: config.ru # optional

# Each object in this section is a worker config, that is, one that
# would be passed to `maru-worker -c <...>`
#
# See `maru-worker --config-example`
workers:
- name: Hostname.1
  masters:
  - url: https://compute.example.com/
    key: ucc4i00uln5chj13w2rw42td
- name: Hostname.2
  masters:
  - url: https://compute.example.com/
    key: pmiu048o9suxsbefynr3pmlv
# ...
EXAMPLE
when "version"
	puts "maru #{Maru::VERSION} (https://github.com/devyn/maru/)"
else
	puts <<-USAGE
Usage: #$0 <command> [arg1] [arg2] [argN...]

Commands:
    start [services...]             # Start the specified services. If no services are
                                    # specified, all known services will be started.

    stop [services...]              # Stop the specified services. If no services are
                                    # specified, all known services will be stopped.

    restart [services...]           # Restart the specified services. If no services are
                                    # specified, all known services will be restarted.

    logs [services...]              # Watch (in a similar fashion to `tail -f`) the logs
                                    # of the specified services. If no services are
                                    # specified, the logs of all known services will be
                                    # watched.

    example                         # Print an example operator config file.

    version                         # Print version information for maru.

Note: A service refers to either `master` or any worker name. For example,

    $ maru start master Hostname.1

will start both the master and the worker named `Hostname.1`.
USAGE

	exit 1 unless cmd == "help"
end
